// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace DAL.Models
{
    public partial class seyehatContext : DbContext
    {
        public seyehatContext()
        {
        }

        public seyehatContext(DbContextOptions<seyehatContext> options)
            : base(options)
        {
        }

        public virtual DbSet<bilet_firma_iliskisi> bilet_firma_iliskisi { get; set; }
        public virtual DbSet<bilet_yolcu_iliskisi> bilet_yolcu_iliskisi { get; set; }
        public virtual DbSet<biletler> biletler { get; set; }
        public virtual DbSet<firma> firma { get; set; }
        public virtual DbSet<yolcu> yolcu { get; set; }

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            if (!optionsBuilder.IsConfigured)
            {
#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see http://go.microsoft.com/fwlink/?LinkId=723263.
                optionsBuilder.UseSqlServer("Data Source=10.1.1.200;Initial Catalog=seyehat;User ID=sa;Password=Ea409098813016.");
            }
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<bilet_firma_iliskisi>(entity =>
            {
                entity.Property(e => e.id).HasDefaultValueSql("(newid())");

                entity.HasOne(d => d.bilet)
                    .WithMany(p => p.bilet_firma_iliskisi)
                    .HasForeignKey(d => d.biletID)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_bilet_firma_iliskisi_biletler");

                entity.HasOne(d => d.firma)
                    .WithMany(p => p.bilet_firma_iliskisi)
                    .HasForeignKey(d => d.firmaId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_bilet_firma_iliskisi_firma");
            });

            modelBuilder.Entity<bilet_yolcu_iliskisi>(entity =>
            {
                entity.Property(e => e.id).ValueGeneratedNever();

                entity.HasOne(d => d.bilet)
                    .WithMany(p => p.bilet_yolcu_iliskisi)
                    .HasForeignKey(d => d.biletID)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_bilet_yolcu_iliskisi_biletler");

                entity.HasOne(d => d.yolcu)
                    .WithMany(p => p.bilet_yolcu_iliskisi)
                    .HasForeignKey(d => d.yolcuID)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_bilet_yolcu_iliskisi_yolcu");
            });

            modelBuilder.Entity<biletler>(entity =>
            {
                entity.Property(e => e.id).ValueGeneratedNever();

                entity.Property(e => e.biletAdi)
                    .IsRequired()
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<firma>(entity =>
            {
                entity.Property(e => e.id).HasDefaultValueSql("(newid())");

                entity.Property(e => e.firmaAdi)
                    .IsRequired()
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<yolcu>(entity =>
            {
                entity.Property(e => e.id).HasDefaultValueSql("(newid())");

                entity.Property(e => e.ad)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.kullaniciAdi)
                    .IsRequired()
                    .HasMaxLength(20);

                entity.Property(e => e.sifre)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.soyad)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.tc).HasMaxLength(11);
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}